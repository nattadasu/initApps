#!/bin/bash
# -*- coding: utf-8 -*-

exit 1 # exit due to script is not ready yet

# check if the user is root
if [[ "${UID}" -ne 0 ]]; then
  echo 'Must execute with sudo or root' >&2
  exit 1
fi

# check if apt-get available, if not exit
if [[ ! -x $(which apt-get) ]]; then
  echo "
  apt-get not found, probably you are not using Ubuntu/Debian derivative
  I'm personally sorry if you're using other distro." >&2
  exit 1
fi

# Update and upgrade packages from apt-get
echo "Updating packages..."
sudo apt-get update
sudo apt-get upgrade -y

# check if pacstall is available, if not install
if [[ ! -x $(which pacstall) ]]; then
  echo "Installing pacstall..."
  bash -c '$(curl -fsSL https://git.io/JsADh || wget -q https://git.io/JsADh -O -)'
fi

# check if nala is available, if not install via pacstall
if [[ ! -x $(which nala) ]]; then
  echo "Installing nala..."
  pacstall -I nala-deb
fi

# check if deb-get is available, if not install
if [[ ! -x $(which deb-get) ]]; then
  echo "Installing deb-get..."
  sudo apt install curl
  curl -sL https://raw.githubusercontent.com/wimpysworld/deb-get/main/deb-get | sudo -E bash -s install deb-get
fi

flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

# Add ppa
# echo "Adding ppas..."
# declare -a ppa_list
# ppa_list=(
#   ppa:
# )
# for ppa in ppa_list; do
#   sudo add-apt-repository "${ppa}"
# done

# Install packages from following array with nala
echo "Installing packages with nala..."
declare -a nala_packages
nala_packages=(
  wget
)

nala install ${nala_packages[*]}

# Unsnap packages, script by popey: https://github.com/popey/unsnap
echo "Unsnapping packages..."
git clone https://github.com/popey/unsnap
cd unsnap
./unsnap auto

cd ../ && rm -rf unsnap

# Download and install package binaries using wget
echo "Downloading binaries..."
declare -a binary_list
binary_list=(
  https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
)
for binary in binary_list; do
  curl -O "${binary}"
done

# Download and install flatpak packages
echo "Downloading flatpak packages..."
declare -a flatpak_list
flatpak_list=(
  io.github.peazip.PeaZip
  io.github.realmazharhusain.GdmSettings
)

for pkgs in flatpak_list; do
  flatpak install flathub "${pkgs}"
done
